{"version":3,"sources":["components/Pokemon.js","components/TypeList.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","Pokemon","pokemon","setType","inCollection","useState","isCaught","setIsCaught","useEffect","a","id","axios","post","console","log","delete","sprites","front_default","className","name","height","weight","types","map","type","i","onClick","onMouseOut","e","currentTarget","src","onMouseOver","back_default","TypeList","pokemonList","onPokemonClick","Main","props","setPokemon","userInput","setUserInput","pokemonName","setPokemonName","setPokemonList","isError","setIsError","firstUpdate","useRef","get","res","data","status","pokemons","current","resetData","undefined","value","onChange","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.540b6567.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst BASE_URL = \"/api\";\n\nfunction Pokemon({ pokemon, setType, inCollection }) {\n  const [isCaught, setIsCaught] = useState(false);\n  useEffect(async () => {\n    if (await inCollection(pokemon.id)) {\n      setIsCaught(true);\n    } else {\n      setIsCaught(false);\n    }\n  }, [pokemon]);\n\n  useEffect(async () => {\n    (async function postingFunction() {\n      if (!isCaught || (await inCollection(pokemon.id))) {\n        return;\n      }\n      (async function postPokemon() {\n        try {\n          await axios.post(`${BASE_URL}/collection/catch`, pokemon);\n        } catch (err) {\n          console.log(err);\n        }\n      })();\n    })();\n  }, [isCaught]);\n\n  useEffect(() => {\n    if (isCaught) {\n      return;\n    }\n    (async function postPokemon() {\n      try {\n        await axios.delete(`${BASE_URL}/collection/release/${pokemon.id}`);\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, [isCaught]);\n\n  let img = pokemon.sprites.front_default;\n\n  return (\n    <div className=\"details-div\">\n      <ul>\n        <li>Name: {pokemon.name}</li>\n        <li>Height: {pokemon.height}</li>\n        <li>Weight: {pokemon.weight}</li>\n        <li>\n          Types:{\" \"}\n          {pokemon.types.map((type, i) => {\n            return (\n              <span\n                key={`type key: ${i}`}\n                onClick={() => {\n                  setType(type);\n                }}\n              >\n                {type}{\" \"}\n              </span>\n            );\n          })}\n        </li>\n      </ul>\n      <img\n        onMouseOut={(e) =>\n          (e.currentTarget.src = `${pokemon.sprites.front_default}`)\n        }\n        onMouseOver={(e) =>\n          (e.currentTarget.src = `${pokemon.sprites.back_default}`)\n        }\n        src={pokemon.sprites.front_default}\n      />\n      {pokemon.name ? (\n        <button onClick={() => setIsCaught(!isCaught)}>\n          {isCaught ? `release` : `catch`}\n        </button>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Pokemon;\n","import React from \"react\";\n\nfunction TypeList({\n  pokemonList,\n  onPokemonClick,\n}) {\n  return (\n    <div className=\"list-div\">\n      <ul>\n        {pokemonList.map((pokemon, i) => {\n          return (\n            <li\n              key={`pokemon list item:${i}`}\n              onClick={() => {\n                return onPokemonClick(pokemon.name);\n              }}\n            >\n              {pokemon.name}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default TypeList;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport Pokemon from \"./Pokemon\";\nimport TypeList from \"./TypeList\";\nimport axios from \"axios\";\nconst BASE_URL = \"/api\";\n\nfunction Main(props) {\n  const [pokemon, setPokemon] = useState({\n    name: \"\",\n    height: \"\",\n    weight: \"\",\n    types: [\"\"],\n    sprites: {\n      back_default: \"\",\n      front_default: \"\",\n    },\n  });\n\n  const [userInput, setUserInput] = useState(\"\");\n  const [pokemonName, setPokemonName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [pokemonList, setPokemonList] = useState([]);\n  const [isError, setIsError] = useState(false);\n  const firstUpdate = useRef(true);\n\n  useEffect(() => {\n    (async function getData() {\n      const res = await axios.get(`${BASE_URL}/type/${type}`);\n      console.log(res.data.pokemons);\n      setPokemonList(res.data.pokemons);\n    })();\n  }, [type]);\n\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    (async function getData() {\n      try {\n        const res = await axios.get(`${BASE_URL}/pokemon/${pokemonName}`);\n        setPokemon(res.data);\n        setIsError(false);\n      } catch (err) {\n        setIsError(true);\n      }\n    })();\n  }, [pokemonName]);\n\n  async function inCollection(id) {\n    try {\n      const res = await axios.get(`${BASE_URL}/collection/status/${id}`);\n      console.log(res.data.status);\n      if (res.data.status === \"caught\") {\n        return true;\n      } else {\n        return false;\n      }\n    } catch (err) {\n      return false;\n    }\n  }\n  const clickHandler = () => {\n    resetData();\n  };\n  const resetData = (name = undefined) => {\n    setPokemonName(name ? name : userInput);\n    setPokemonList([]);\n    setType(\"\");\n  };\n\n  return (\n    <div>\n      <input\n        value={userInput}\n        onChange={(e) => setUserInput(e.target.value)}\n        type=\"text\"\n      />\n      <button type=\"button\" onClick={clickHandler}>\n        search pokemon\n      </button>\n      {isError ? <div>Pokemon not found</div> : null}\n      <Pokemon\n        pokemon={pokemon}\n        setType={setType}\n        inCollection={inCollection}\n      />\n      <TypeList\n        pokemonList={pokemonList}\n        onPokemonClick={resetData}\n        inCollection={inCollection}\n      />\n    </div>\n  );\n}\n\nexport default Main;\n","import Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Pokedex</h1>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}